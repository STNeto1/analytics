// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// WebsitesColumns holds the columns for the "websites" table.
	WebsitesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "domain", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_websites", Type: field.TypeUUID, Nullable: true},
	}
	// WebsitesTable holds the schema information for the "websites" table.
	WebsitesTable = &schema.Table{
		Name:       "websites",
		Columns:    WebsitesColumns,
		PrimaryKey: []*schema.Column{WebsitesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "websites_users_websites",
				Columns:    []*schema.Column{WebsitesColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WebsiteEventsColumns holds the columns for the "website_events" table.
	WebsiteEventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "event_name", Type: field.TypeString},
		{Name: "url_path", Type: field.TypeString, Nullable: true},
		{Name: "url_query", Type: field.TypeString, Nullable: true},
		{Name: "referrer_path", Type: field.TypeString, Nullable: true},
		{Name: "referrer_query", Type: field.TypeString, Nullable: true},
		{Name: "referrer_domain", Type: field.TypeString, Nullable: true},
		{Name: "page_title", Type: field.TypeString, Nullable: true},
		{Name: "page_data", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "website_id", Type: field.TypeUUID, Nullable: true},
	}
	// WebsiteEventsTable holds the schema information for the "website_events" table.
	WebsiteEventsTable = &schema.Table{
		Name:       "website_events",
		Columns:    WebsiteEventsColumns,
		PrimaryKey: []*schema.Column{WebsiteEventsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "website_events_websites_events",
				Columns:    []*schema.Column{WebsiteEventsColumns[10]},
				RefColumns: []*schema.Column{WebsitesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		UsersTable,
		WebsitesTable,
		WebsiteEventsTable,
	}
)

func init() {
	WebsitesTable.ForeignKeys[0].RefTable = UsersTable
	WebsiteEventsTable.ForeignKeys[0].RefTable = WebsitesTable
}
